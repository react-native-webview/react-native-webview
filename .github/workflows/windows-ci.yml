name: Windows CI
on: [pull_request]

jobs:
  run-windows-tests:
    name: Build & run tests
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      name: Checkout Code

    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce
      with:
        vs-version: '[17.0,)'
        msbuild-architecture: x64

    - name: Install node modules
      run: npm install

    - name: npm build
      run: npm build

    - name: Build x64 release
      shell: powershell
      run: npm run windows -- --release --no-packager --no-deploy --logging

    # Workaround for a bug in package searching during deploy.
    # The deploy script only searches windows/{*/bin/x64/Release,Release/*}, but the build step above placed the packages at windows/x64/Release.
    # Copy the packages to Windows/Release before deploying.
    - name: Deploy
      shell: powershell
      run: |
        Copy-Item -Path example\windows\x64\Release -Recurse -Destination example\windows\
        npx react-native run-windows --arch x64 --release --root example --logging --no-build --no-packager --deploy-from-layout

    - name: Start Appium server
      shell: powershell
      run: Start-Process PowerShell -ArgumentList "npm run appium"

    - name: Start React server
      shell: powershell
      run: Start-Process PowerShell -ArgumentList "npm start"

    - name: Run tests
      run: npm run test:windows
