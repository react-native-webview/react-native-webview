///
/// NitroBridgeWebview-Swift-Cxx-Bridge.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `HybridNitroBridgeWebviewSpec` to properly resolve imports.
namespace margelo::nitro::bridgewebview { class HybridNitroBridgeWebviewSpec; }

// Forward declarations of Swift defined types
// Forward declaration of `HybridNitroBridgeWebviewSpec_cxx` to properly resolve imports.
namespace NitroBridgeWebview { class HybridNitroBridgeWebviewSpec_cxx; }

// Include C++ defined types
#include "HybridNitroBridgeWebviewSpec.hpp"
#include <NitroModules/Result.hpp>
#include <exception>
#include <memory>
#include <string>

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::bridgewebview::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>
  /**
   * Specialized version of `std::shared_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>`.
   */
  using std__shared_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_ = std::shared_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>;
  std::shared_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec> create_std__shared_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_(void* _Nonnull swiftUnsafePointer);
  void* _Nonnull get_std__shared_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_(std__shared_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_ cppType);
  
  // pragma MARK: std::weak_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>
  using std__weak_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_ = std::weak_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>;
  inline std__weak_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_ weakify_std__shared_ptr_margelo__nitro__bridgewebview__HybridNitroBridgeWebviewSpec_(const std::shared_ptr<margelo::nitro::bridgewebview::HybridNitroBridgeWebviewSpec>& strong) { return strong; }
  
  // pragma MARK: Result<std::string>
  using Result_std__string_ = Result<std::string>;
  inline Result_std__string_ create_Result_std__string_(const std::string& value) {
    return Result<std::string>::withValue(value);
  }
  inline Result_std__string_ create_Result_std__string_(const std::exception_ptr& error) {
    return Result<std::string>::withError(error);
  }

} // namespace margelo::nitro::bridgewebview::bridge::swift
