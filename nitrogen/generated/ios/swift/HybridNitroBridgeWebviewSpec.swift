///
/// HybridNitroBridgeWebviewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroBridgeWebviewSpec``
public protocol HybridNitroBridgeWebviewSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func multiply(a: Double, b: Double, input: String) throws -> String
}

/// See ``HybridNitroBridgeWebviewSpec``
public class HybridNitroBridgeWebviewSpec_base {
  private weak var cxxWrapper: HybridNitroBridgeWebviewSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroBridgeWebviewSpec_cxx {
  #if DEBUG
    guard self is HybridNitroBridgeWebviewSpec else {
      fatalError("`self` is not a `HybridNitroBridgeWebviewSpec`! Did you accidentally inherit from `HybridNitroBridgeWebviewSpec_base` instead of `HybridNitroBridgeWebviewSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroBridgeWebviewSpec_cxx(self as! HybridNitroBridgeWebviewSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroBridgeWebview HybridObject.
 * Implement this protocol to create Swift-based instances of NitroBridgeWebview.
 * ```swift
 * class HybridNitroBridgeWebview : HybridNitroBridgeWebviewSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroBridgeWebviewSpec = HybridNitroBridgeWebviewSpec_protocol & HybridNitroBridgeWebviewSpec_base
