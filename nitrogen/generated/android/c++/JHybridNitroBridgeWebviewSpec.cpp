///
/// JHybridNitroBridgeWebviewSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroBridgeWebviewSpec.hpp"



#include <string>

namespace margelo::nitro::bridgewebview {

  jni::local_ref<JHybridNitroBridgeWebviewSpec::jhybriddata> JHybridNitroBridgeWebviewSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroBridgeWebviewSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroBridgeWebviewSpec::initHybrid),
    });
  }

  size_t JHybridNitroBridgeWebviewSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  std::string JHybridNitroBridgeWebviewSpec::multiply(double a, double b, const std::string& input) {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<jni::JString>(double /* a */, double /* b */, jni::alias_ref<jni::JString> /* input */)>("multiply");
    auto __result = method(_javaPart, a, b, jni::make_jstring(input));
    return __result->toStdString();
  }

} // namespace margelo::nitro::bridgewebview
